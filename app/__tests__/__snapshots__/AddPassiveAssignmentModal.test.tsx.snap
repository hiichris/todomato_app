// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddPassiveAssignmentModal renders correctly 1`] = `
<RNCSafeAreaView
  edges={
    {
      "bottom": "additive",
      "left": "additive",
      "right": "additive",
      "top": "additive",
    }
  }
>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={true}
  >
    <View
      onLayout={[Function]}
      style={
        [
          {
            "flex": 1,
          },
          {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <RCTScrollView
        keyboardShouldPersistTaps="always"
        style={
          {
            "flex": 1,
          }
        }
      >
        <View>
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "backgroundColor": "rgba(255, 87, 51, 0.95)",
                "borderRadius": 20,
                "elevation": 5,
                "flex": 1,
                "height": 1000.5,
                "justifyContent": "space-evenly",
                "marginTop": 333.5,
                "padding": 16,
                "paddingTop": 40,
                "shadowColor": "#000",
                "shadowOpacity": 0.15,
                "shadowRadius": 5,
                "width": 750,
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 2,
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <Text
                style={
                  {
                    "color": "white",
                    "fontSize": 18,
                    "fontWeight": "bold",
                    "marginTop": -38,
                  }
                }
              >
                Passive Assignment
              </Text>
              <View
                style={
                  {
                    "alignItems": "center",
                    "justifyContent": "center",
                    "position": "absolute",
                    "top": -20,
                    "width": "100%",
                  }
                }
              >
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "alignItems": "center",
                      "backgroundColor": "white",
                      "borderRadius": 20,
                      "height": 30,
                      "justifyContent": "center",
                      "left": 345,
                      "width": 30,
                    }
                  }
                >
                  <Text
                    style={
                      {
                        "color": "#FF5733",
                        "fontSize": 10,
                        "fontWeight": "bold",
                        "textAlign": "center",
                        "width": 13,
                      }
                    }
                  >
                    X
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                {
                  "flex": 50,
                  "justifyContent": "flex-start",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "white",
                      "flex": 3,
                      "fontSize": 14,
                      "fontWeight": "bold",
                      "textAlign": "center",
                    }
                  }
                >
                  Category:
                </Text>
                <View
                  style={
                    {
                      "alignContent": "center",
                      "flex": 5,
                      "flexDirection": "row",
                      "justifyContent": "center",
                    }
                  }
                >
                  <RCTScrollView
                    horizontal={true}
                    showsHorizontalScrollIndicator={false}
                    style={
                      {
                        "marginRight": 8,
                      }
                    }
                  >
                    <View>
                      <View
                        style={
                          {
                            "flexDirection": "row",
                            "height": 50,
                            "padding": 0,
                            "width": "100%",
                          }
                        }
                      />
                    </View>
                  </RCTScrollView>
                </View>
                <View
                  style={
                    {
                      "height": 100,
                    }
                  }
                />
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "white",
                      "flex": 3,
                      "fontSize": 14,
                      "fontWeight": "bold",
                      "textAlign": "center",
                    }
                  }
                >
                  Todo Title:
                </Text>
                <TextInput
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  style={
                    {
                      "borderColor": "white",
                      "borderRadius": 10,
                      "borderWidth": 1,
                      "color": "white",
                      "flex": 4,
                      "height": 40,
                      "justifyContent": "flex-start",
                      "margin": 8,
                      "padding": 10,
                      "verticalAlign": "top",
                    }
                  }
                  textAlign="left"
                  textAlignVertical="top"
                  value=""
                />
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "white",
                      "flex": 3,
                      "fontSize": 14,
                      "fontWeight": "bold",
                      "textAlign": "center",
                    }
                  }
                >
                  Your Name / Asignee Name:
                </Text>
                <View
                  style={
                    {
                      "alignContent": "center",
                      "flex": 5,
                      "flexDirection": "row",
                      "justifyContent": "center",
                    }
                  }
                >
                  <TextInput
                    numberOfLines={1}
                    onChangeText={[Function]}
                    onFocus={[Function]}
                    style={
                      {
                        "borderColor": "white",
                        "borderRadius": 10,
                        "borderWidth": 1,
                        "color": "white",
                        "flex": 4,
                        "height": 40,
                        "justifyContent": "flex-start",
                        "margin": 10,
                        "padding": 10,
                      }
                    }
                    textAlign="left"
                    textAlignVertical="top"
                    value=""
                  />
                  <TextInput
                    numberOfLines={1}
                    onChangeText={[Function]}
                    onFocus={[Function]}
                    style={
                      {
                        "borderColor": "white",
                        "borderRadius": 10,
                        "borderWidth": 1,
                        "color": "white",
                        "flex": 4,
                        "height": 40,
                        "justifyContent": "flex-start",
                        "margin": 10,
                        "padding": 10,
                      }
                    }
                    textAlign="left"
                    textAlignVertical="top"
                    value=""
                  />
                </View>
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "white",
                      "flex": 3,
                      "fontSize": 14,
                      "fontWeight": "bold",
                      "textAlign": "center",
                    }
                  }
                >
                  Task Description:
                </Text>
                <TextInput
                  numberOfLines={1}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  style={
                    {
                      "borderColor": "white",
                      "borderRadius": 10,
                      "borderWidth": 1,
                      "color": "white",
                      "flex": 4,
                      "height": 40,
                      "justifyContent": "flex-start",
                      "margin": 8,
                      "padding": 10,
                      "verticalAlign": "top",
                    }
                  }
                  textAlign="left"
                  textAlignVertical="top"
                  value=""
                />
              </View>
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "center",
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "white",
                      "flex": 3,
                      "fontSize": 14,
                      "fontWeight": "bold",
                      "textAlign": "center",
                    }
                  }
                >
                  Asignee Email:
                </Text>
                <TextInput
                  numberOfLines={1}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  style={
                    {
                      "borderColor": "white",
                      "borderRadius": 10,
                      "borderWidth": 1,
                      "color": "white",
                      "flex": 4,
                      "height": 40,
                      "justifyContent": "flex-start",
                      "margin": 8,
                      "padding": 10,
                      "verticalAlign": "top",
                    }
                  }
                  textAlign="left"
                  textAlignVertical="top"
                  value=""
                />
              </View>
              <View
                style={
                  {
                    "flexDirection": "row",
                    "justifyContent": "space-between",
                    "margin": 8,
                    "marginTop": 8,
                  }
                }
              >
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    [
                      {
                        "borderRadius": 20,
                        "elevation": 2,
                        "margin": 8,
                        "padding": 16,
                        "paddingHorizontal": 12,
                      },
                      {
                        "backgroundColor": "#B2361B",
                        "borderColor": "#FF5733",
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#B2361B",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      {
                        "color": "white",
                        "fontSize": 14,
                        "fontWeight": "bold",
                        "textAlign": "center",
                      }
                    }
                  >
                    Create
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                {
                  "flexGrow": 2,
                }
              }
            />
          </View>
        </View>
      </RCTScrollView>
    </View>
  </Modal>
</RNCSafeAreaView>
`;
