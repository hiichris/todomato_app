// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TapButtons renders correctly 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "justifyContent": "center",
      "marginBottom": 8,
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
  >
    <Text
      style={
        {
          "alignItems": "center",
          "borderBottomColor": "#FF5733",
          "borderColor": "#FF5733",
          "borderRadius": 10,
          "borderWidth": 1,
          "color": "#FF5733",
          "fontSize": 16,
          "marginHorizontal": 2,
          "paddingHorizontal": 20,
          "paddingVertical": 0,
        }
      }
    >
      Tasks
    </Text>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
  >
    <Text
      style={
        {
          "alignItems": "center",
          "borderBottomColor": "#FF5733",
          "borderColor": "#FF5733",
          "borderRadius": 10,
          "borderWidth": 1,
          "color": "#FF5733",
          "fontSize": 16,
          "marginHorizontal": 2,
          "paddingHorizontal": 20,
          "paddingVertical": 0,
        }
      }
    >
      Details
    </Text>
  </View>
</View>
`;
